{"version":3,"sources":["components/ColorPicker/index.jsx","App.js","index.js"],"names":["ColorPicker","color","active","onChange","useState","displayColorPicker","setDisplayColorPicker","className","clsx","style","backgroundColor","type","disabled","e","target","value","fontSize","onClick","colors","hex","App","JSON","parse","window","localStorage","getItem","DB","data","setData","useEffect","setItem","stringify","options","search","paging","title","columns","field","render","rowData","editComponent","props","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","onRowUpdate","oldData","dataCopy","tableData","id","onRowDelete","splice","ReactDOM","document","querySelector"],"mappings":"qxCAuDeA,G,OAjDK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAAe,EACCC,oBAAS,GADV,mBAC5CC,EAD4C,KACxBC,EADwB,KAMnD,OACE,yBAAKC,UAAU,eACb,yBAAKA,UAAU,sBACb,yBACEA,UAAWC,YAAK,qBAAsB,CACpC,6BAA8BN,IAEhCO,MAAO,CAAEC,gBAAgB,GAAD,OAAKT,KAE7B,2BACEU,KAAK,OACLJ,UAAU,yBACVK,SAAWV,EAAsB,GAAb,WACpBC,SAAU,SAACU,GAAD,OAAOV,EAASU,EAAEC,OAAOC,QACnCA,MAAOd,KAGVC,GACC,kBAAC,IAAD,CACEc,SAAS,QACTC,QAAS,kBAvBjBX,GAAuBD,OA4BpBA,GACC,yBAAKE,UAAU,0BACb,yBACEA,UAAU,iCACVU,QAAS,kBAAMX,GAAsB,MAGvC,kBAAC,eAAD,CACEL,MAAOA,EACPE,SAAU,SAACe,GAAD,OAAYf,EAASe,EAAOC,YC4BnCC,EAnEH,WACV,IADgB,EAIQhB,oBAHJ,kBAClBiB,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,UAAYC,KAFrC,mBAITC,EAJS,KAIHC,EAJG,KAShB,OAHAC,qBAAU,WACRN,OAAOC,aAAaM,QAAQ,OAAQT,KAAKU,UAAUJ,MAClD,CAACA,IAEF,yBAAKpB,UAAU,OACZoB,GACC,kBAAC,IAAD,CACEK,QAAS,CAAEC,QAAQ,EAAOC,QAAQ,GAClCC,MAAM,kNACNC,QAAS,CACP,CAAED,MAAO,OAAQE,MAAO,QACxB,CAAEF,MAAO,OAAQE,MAAO,QACxB,CACEF,MAAO,QACPE,MAAO,QACPC,OAAQ,SAACC,GAAD,OAAa,kBAAC,EAAD,CAAatC,MAAOsC,EAAQtC,SACjDuC,cAAe,SAACC,GAAD,OACb,kBAAC,EAAD,CACExC,MAAOwC,EAAM1B,MACbZ,SAAUsC,EAAMtC,SAChBD,QAAM,OAKdyB,KAAMA,EACNe,SAAU,CACRC,SAAU,SAACC,GAAD,OACR,IAAIC,SAAQ,SAACC,GACXC,YAAW,WACTnB,GAAQ,SAACoB,GAAD,4BAAmBA,GAAnB,CAA8BJ,OACtCE,MACC,SAEPG,YAAa,SAACL,EAASM,GAAV,OACX,IAAIL,SAAQ,SAACC,GACXC,YAAW,WACT,GAAIG,EAAS,CACX,IAAMC,EAAQ,YAAOxB,GACrBwB,EAASD,EAAQE,UAAUC,IAAMT,EACjChB,EAAQuB,GACRL,OAED,SAEPQ,YAAa,SAACJ,GAAD,OACX,IAAIL,SAAQ,SAACC,GACXC,YAAW,WACT,IAAMI,EAAQ,YAAOxB,GACrBwB,EAASI,OAAOL,EAAQE,UAAUC,GAAI,GACtCzB,EAAQuB,GACRL,MACC,cC5DnBU,IAASlB,OAAO,kBAAC,EAAD,MAASmB,SAASC,cAAc,Y","file":"static/js/main.4df1bb5f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport ColorizeIcon from \"@material-ui/icons/Colorize\";\nimport clsx from \"clsx\";\nimport \"./colorpicker.scss\";\n\nconst ColorPicker = ({ color, active, onChange }) => {\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n  const handleColorPickerStatus = () =>\n    setDisplayColorPicker(!displayColorPicker);\n\n  const test = (e) => console.log(e);\n  return (\n    <div className=\"colorpicker\">\n      <div className=\"colorpicker__field\">\n        <div\n          className={clsx(\"colorpicker__color\", {\n            \"colorpicker__color--active\": active,\n          })}\n          style={{ backgroundColor: `${color}` }}\n        >\n          <input\n            type=\"text\"\n            className=\"colorpicker__color-val\"\n            disabled={!active ? \"disabled\" : \"\"}\n            onChange={(e) => onChange(e.target.value)}\n            value={color}\n          />\n        </div>\n        {active && (\n          <ColorizeIcon\n            fontSize=\"small\"\n            onClick={() => handleColorPickerStatus()}\n          />\n        )}\n      </div>\n\n      {displayColorPicker && (\n        <div className=\"colorpicker__interface\">\n          <div\n            className=\"colorpicker__interface-overlay\"\n            onClick={() => setDisplayColorPicker(false)}\n          />\n\n          <SketchPicker\n            color={color}\n            onChange={(colors) => onChange(colors.hex)}\n\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport MaterialTable from \"material-table\";\n\nimport DB from \"./DB.json\";\nimport ColorPicker from \"./components/ColorPicker\";\n\nconst App = () => {\n  const initialData = () =>\n    JSON.parse(window.localStorage.getItem(\"data\")) || DB;\n\n  const [data, setData] = useState(initialData);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"data\", JSON.stringify(data));\n  }, [data]);\n  return (\n    <div className=\"App\">\n      {data && (\n        <MaterialTable\n          options={{ search: false, paging: false }}\n          title=\"Примитивный редактор табличных данных\"\n          columns={[\n            { title: \"Name\", field: \"name\" },\n            { title: \"Type\", field: \"type\" },\n            {\n              title: \"Color\",\n              field: \"color\",\n              render: (rowData) => <ColorPicker color={rowData.color} />,\n              editComponent: (props) => (\n                <ColorPicker\n                  color={props.value}\n                  onChange={props.onChange}\n                  active\n                />\n              ),\n            },\n          ]}\n          data={data}\n          editable={{\n            onRowAdd: (newData) =>\n              new Promise((resolve) => {\n                setTimeout(() => {\n                  setData((prevState) => [...prevState, newData]);\n                  resolve();\n                }, 600);\n              }),\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve) => {\n                setTimeout(() => {\n                  if (oldData) {\n                    const dataCopy = [...data];\n                    dataCopy[oldData.tableData.id] = newData;\n                    setData(dataCopy);\n                    resolve();\n                  }\n                }, 600);\n              }),\n            onRowDelete: (oldData) =>\n              new Promise((resolve) => {\n                setTimeout(() => {\n                  const dataCopy = [...data];\n                  dataCopy.splice(oldData.tableData.id, 1);\n                  setData(dataCopy);\n                  resolve();\n                }, 600);\n              }),\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}